{"version":3,"sources":["helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/NuevaCategoria.js","GifExpertApp.js","index.js"],"names":["getGifs","categoria","a","URL","encodeURI","fetch","respuesta","json","data","gifs","map","gif","id","title","imagenurl","images","downsized_medium","url","GifGridItem","className","src","alt","GifGrid","useState","datos","cargando","state","setState","useEffect","then","useFetchGifs","imagenes","imagen","NuevaCategoria","setCategorias","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categorias","type","autoFocus","value","onChange","target","GifExpertApp","props","ReactDOM","render","document","getElementById"],"mappings":"0MAAaA,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UACpDH,GAFmB,+DAKGI,MAAMF,GALT,cAKfG,EALe,gBAMEA,EAAUC,OANZ,uBAMbC,EANa,EAMbA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,UAAS,UAAEH,EAAII,cAAN,aAAE,EAAYC,iBAAiBC,QAZvB,kBAedR,GAfc,4CAAH,sD,OCeLS,EAbK,SAAC,GAA0B,IAAxBL,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,UAC5B,OACE,sBAAKK,UAAU,6CAAf,UACE,qBAAKC,IAAKN,EAAWO,IAAKR,IAC1B,4BAAIA,QCsBKS,EAvBC,SAAC,GAAmB,IAAjBrB,EAAgB,EAAhBA,UACjB,ECH0B,SAACA,GAC3B,MAA0BsB,mBAAS,CACjCC,MAAO,GACPC,UAAU,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATAC,qBAAU,WACR5B,EAAQC,GAAW4B,MAAK,SAACpB,GACvBkB,EAAS,CACPH,MAAOf,EACPgB,UAAU,SAGb,CAACxB,IAEGyB,EDZ+BI,CAAa7B,GAApC8B,EAAf,EAAQP,MAAiBC,EAAzB,EAAyBA,SAEzB,OACE,qCACE,6BAAKxB,IACJwB,GAAY,WAEb,qBAAKN,UAAU,YAAf,SACE,6BACGY,EAASrB,KAAI,SAACsB,GAAD,OACZ,cAAC,EAAD,eAAiCA,GAAfA,EAAOpB,e,OEsBtBqB,EAlCQ,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACxB,EAAoCX,mBAAS,IAA7C,mBAAOY,EAAP,KAAmBC,EAAnB,KAiBA,OACE,sBAAMC,SAZa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,QAAU,IAIhCP,GAAc,SAACQ,GAAD,OAAiBP,GAAjB,mBAAgCO,OAE9CN,EAAc,MAGd,SACE,uBACEO,KAAK,OACLC,WAAS,EACTC,MAAOV,EACPW,SArBoB,SAACR,GACzBF,EAAcE,EAAES,OAAOF,aCgBZG,EAnBM,SAACC,GACpB,MAAoC1B,mBAAS,CAAC,iBAA9C,mBAAOmB,EAAP,KAAmBR,EAAnB,KAEA,OACE,qCACE,sDACA,cAAC,EAAD,CAAgBA,cAAeA,IAC/B,uBACA,6BACGQ,EAAWhC,KAAI,SAACT,GACf,OAAO,cAAC,EAAD,CAAyBA,UAAWA,GAAtBA,Y,MCV/BiD,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.e04e3d5e.chunk.js","sourcesContent":["export const getGifs = async (categoria) => {\r\n  const URL = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n    categoria\r\n  )}&limit=10&api_key=Og1AtYbhkLhjYkIY95TfyjmlvMj077hy`;\r\n\r\n  const respuesta = await fetch(URL);\r\n  const { data } = await respuesta.json();\r\n\r\n  const gifs = data.map((gif) => {\r\n    return {\r\n      id: gif.id,\r\n      title: gif.title,\r\n      imagenurl: gif.images?.downsized_medium.url,\r\n    };\r\n  });\r\n  return gifs;\r\n};\r\n","// import PropTypes from 'prop-types'\r\n\r\nconst GifGridItem = ({ title, imagenurl }) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__backInLeft\">\r\n      <img src={imagenurl} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\n// GifGridItem.propTypes = {\r\n\r\n// }\r\n\r\nexport default GifGridItem;\r\n","// import PropTypes from 'prop-types'\r\n\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport GifGridItem from \"./GifGridItem\";\r\n\r\nconst GifGrid = ({ categoria }) => {\r\n  const { datos: imagenes, cargando } = useFetchGifs(categoria);\r\n\r\n  return (\r\n    <>\r\n      <h3>{categoria}</h3>\r\n      {cargando && \"cargando\"}\r\n\r\n      <div className=\"card-grid\">\r\n        <ol>\r\n          {imagenes.map((imagen) => (\r\n            <GifGridItem key={imagen.id} {...imagen} />\r\n          ))}\r\n        </ol>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n// GifGrid.propTypes = {\r\n\r\n// }\r\n\r\nexport default GifGrid;\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (categoria) => {\r\n  const [state, setState] = useState({\r\n    datos: [],\r\n    cargando: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(categoria).then((gifs) => {\r\n      setState({\r\n        datos: gifs,\r\n        cargando: false,\r\n      });\r\n    });\r\n  }, [categoria]);\r\n\r\n  return state;\r\n};\r\n","import PropTypes from \"prop-types\";\r\n\r\nimport { useState } from \"react\";\r\n\r\nconst NuevaCategoria = ({ setCategorias }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (inputValue.trim().length <= 2) {\r\n      return;\r\n    }\r\n\r\n    setCategorias((categorias) => [inputValue, ...categorias]);\r\n\r\n    setInputValue(\"\");\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        autoFocus\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nNuevaCategoria.propTypes = {\r\n  setCategorias: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default NuevaCategoria;\r\n","// import PropTypes from \"prop-types\";\r\nimport { useState } from \"react\";\r\nimport GifGrid from \"./components/GifGrid\";\r\nimport NuevaCategoria from \"./components/NuevaCategoria\";\r\n\r\nconst GifExpertApp = (props) => {\r\n  const [categorias, setCategorias] = useState([\"drangon ball\"]);\r\n\r\n  return (\r\n    <>\r\n      <h2>Desde Gif Expert App</h2>\r\n      <NuevaCategoria setCategorias={setCategorias} />\r\n      <hr />\r\n      <ul>\r\n        {categorias.map((categoria) => {\r\n          return <GifGrid key={categoria} categoria={categoria} />;\r\n        })}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\n// GifExpertApp.propTypes = {};\r\n\r\nexport default GifExpertApp;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport GifExpertApp from \"./GifExpertApp\";\nimport \"./index.css\";\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}